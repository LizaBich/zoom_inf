<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rotation=0
radius=FIELD_INTERNAL_H
scale=   1

polygonCount=8
polygonAngle=360/polygonCount

polygonFaceLength=point_distance(radius,
                                 0,
                                 lengthdir_x(radius,polygonAngle),
                                 lengthdir_y(radius,polygonAngle))

field_w=FIELD_INTERNAL_W
field_h=FIELD_INTERNAL_H

middleVectorL=sqrt(sqr(radius)-sqr(polygonFaceLength/2))

for(var i=0; i&lt;polygonCount i+=1)
{
  middleVector[i,0]=lengthdir_x(1,polygonAngle*(i+0.5))
  middleVector[i,1]=lengthdir_y(1,polygonAngle*(i+0.5))
}


newring=instance_create(0,FIELD_INTERNAL_H,ring_rotatable)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black)

draw_primitive_begin(pr_trianglefan)

for(var i=0; i&lt;polygonCount i+=1)
{
  draw_vertex(x+lengthdir_x(radius*scale,rotation+polygonAngle*i),
              y+lengthdir_y(radius*scale,rotation+polygonAngle*i))
}

draw_primitive_end()


var _rr=point_distance(x,y,mouse_x,mouse_y),
    _aa=point_direction(x,y,mouse_x,mouse_y);

var arr=polarToField_xy(id,_rr,_aa);


with(newring)
if ringMaskCheckPoint(arr[0],arr[1],0)
{draw_set_color(c_red)}
else
{draw_set_color(c_blue)}

with(newring)
{ringMaskDraw(other,0)}

scale=0.5+lengthdir_y(0.25,current_time/40)
rotation-=1
rotation=valueBound(rotation,360)

draw_set_color(c_red)
draw_circle(mouse_x,mouse_y,3,0)



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
