<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MAIN VARS

rotation=irandom(359)
radius=FIELD_INTERNAL_H
scale=     0
fieldScale=0

scaleChange=0
scaleChangeTar=0
scaleChangeStart=0
fieldScaleChange(0.2)

scaleChangeVal=0 //Value is in steps.
scaleChangeTime=30

//Rotation.
rotationMin=0.5
rotationMax=1
rotationAdd=random_range(rotationMin,rotationMax)*chooseSign()
//Rotation.

//Scale.
lifetimeMax=30*10
lifetime=0
scaleBegin=1
scaleEnd=1.5
//Scale.

polygonCount=irandom_range(3,8)
polygonAngle=360/polygonCount

polygonFaceLength=point_distance(radius,
                                 0,
                                 lengthdir_x(radius,polygonAngle),
                                 lengthdir_y(radius,polygonAngle))

field_w=FIELD_INTERNAL_W
field_h=FIELD_INTERNAL_H

middleVectorL=sqrt(sqr(radius)-sqr(polygonFaceLength/2))

for(var i=0; i&lt;polygonCount i+=1)
{
  middleVector[i,0]=lengthdir_x(1,polygonAngle*(i+0.5))
  middleVector[i,1]=lengthdir_y(1,polygonAngle*(i+0.5))
}

/*
0 - inactive
1 - active
2 - background
*/
state=0

myField=noone

baseColor=make_color_hsv(irandom(255),irandom(255),127+irandom(128))
ringColor=make_color_hsv(irandom(255),irandom(255),irandom(64))
ringAdditionalColor=c_white

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///RING CONTAINER

ringCurrent=0
ringBase_y=RING_H+RING_SEP
rings_y=-RING_H
ringsTarget_y=ringBase_y


ringsAm=2//irandom_range(3,6)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=global.cx
y=global.cy

rotation=valueBound(rotation+rotationAdd,360)

if scaleChange
{
  scaleChangeVal+=1
  
  fieldScale=lerp(scaleChangeStart,
             scaleChangeTar,
             sqrt(scaleChangeVal/scaleChangeTime))  
 
  
  if scaleChangeVal&gt;=scaleChangeTime
  {
    fieldScale=scaleChangeTar
    scaleChange=0
  }
}



if state=1
{
  scaleMin=1
  
  if !scaleChange
  {
    lifetime+=1
    fieldScale=lerp(scaleBegin,scaleEnd,lifetime/lifetimeMax)
  }

  if rings_y&lt;ringsTarget_y
  {
    var yadd=(ringsTarget_y-rings_y)/4;
    rings_y+=yadd
    fieldRingsMove(yadd)
  }
  
  if myField=noone
  {myField=instance_create(x,y,field)}
}

scale=fieldScale*global.scale


if state=2
{
  if fieldScale&gt;8
  {
    instance_destroy()
    //show_debug_message("kekus")
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
