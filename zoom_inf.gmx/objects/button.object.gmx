<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>w=32
h=32

scale=1
alpha=1

onClick=-1

clicked=0

myLayout=-1
myLayoutId=0

myParent=noone

blocked=0

text="button"

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
clicked=0

var _lx=layoutGet_x(myLayout,myLayoutId)/world_scale,
    _ly=layoutGet_y(myLayout,myLayoutId)/world_scale;

if global.mRelease &amp;&amp; !blocked 
&amp;&amp; point_in_rectangle(m_x,m_y,cx-w/2+_lx,cy-h/2+_ly,cx+w/2+_lx,cy+h/2+_ly)
{
  clicked=1
  if onClick!=-1
  {script_execute(onClick,myParent)}
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if instance_exists(myParent)
{
  scale=lerp(1,4,sqr(myParent.transitionVal))
  alpha=lerp(1,0,myParent.transitionVal)
}

draw_set_alpha(alpha)

draw_set_color(mainField.ringAdditionalColor)

var _lx=layoutGet_x(myLayout,myLayoutId),
    _ly=layoutGet_y(myLayout,myLayoutId);

draw_rectangle(world_x(cx)+(world_x(-w/2)+_lx)*scale,
               world_y(cy)+(world_y(-h/2)+_ly)*scale,
               world_x(cx)+(world_x(+w/2)+_lx)*scale,
               world_y(cy)+(world_y(+h/2)+_ly)*scale,0)


draw_set_color(mainField.baseColor)
draw_set_halign(fa_center)
draw_set_valign(fa_center)

draw_text_transformed(world_x(cx)+_lx*scale,world_y(cy)+_ly*scale,text,scale,scale,0)

draw_set_alpha(1)

              
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
