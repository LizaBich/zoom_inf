<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///STATES

/*
Main states of menu object.
*/
stateMenu=          0
stateGameover=      1
stateSettings=      2
stateSessionStarted=3

stateChanged=0

state=stateMenu

transition=1
transitionState=1

transitionVal=1 //0..1

transitionTime=5 //Time in steps it will take for the full transition.
transitionAl=transitionTime

transitionFinalState=stateMenu //State which will be taken in the end of transition.

exitState=0

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///LAYOUTS

l_menu=layoutCreate()
layoutItemAdd(l_menu,-0.5,0.75,0,0.5)
layoutItemAdd(l_menu,0.5,0.75,0,0.75)

l_settings=layoutCreate()
layoutItemAdd(l_settings,0,-0.25)
layoutItemAdd(l_settings,0,0.25)

l_gameover=layoutCreate()
layoutItemAdd(l_gameover,0.7,0.9)


myButtons=ds_list_create()

menuMenuButtonsCreate()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DESTROYING LAYOUTS

menuButtonsDelete()

ds_list_destroy(myButtons)

layoutDestroy(l_menu)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TRANSITION

stateChanged=0

if transition
{
  transitionAl-=1
  
  if transitionState=0
  {transitionVal=lerp(1,0,transitionAl/transitionTime)}
  else
  {transitionVal=lerp(0,1,transitionAl/transitionTime)}
  
  if transitionAl&lt;=0
  {
    //Half.
    if transitionState=0
    {
      state=transitionFinalState
      
      transitionAl=transitionTime/2
      transitionState+=1
      stateChanged=1
    }
    //Half.
    else
    //Full.
    {
      transition=0
      transitionState=0
      transitionAl=0
    }
    //Full.
  }
  
}
else
{
  //Defaulting transition vars.
  transitionVal=0
  transitionAl=0
  transitionState=0
  //Defaulting transition vars.
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if state=stateMenu
{
  if stateChanged
  {menuMenuButtonsCreate()}

  //Initializing game session.
  if centerButtonGetPress() &amp;&amp; !instance_exists(game_cntrl)
  {sessionStart()}
  //Initializing game session.
  
  if keyboard_check_pressed(vk_back)
  {
    exitState+=1
    if exitState=2
    {game_end()}
  }
  
  if global.mPress
  {exitState=0}
}

if state=stateSettings
{
  if stateChanged
  {menuSettingsButtonsCreate()}
}

if state=stateGameover
{
  //Initializing game session.
  if centerButtonGetPress() &amp;&amp; !instance_exists(game_cntrl)
  {sessionStart()}
  //Initializing game session.
}

if state=stateSessionStarted
{  
  instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
drawWorld()

draw_set_color(mainField.ringAdditionalColor)
/*
if state=stateMenu
{

}
*/
var _str=string(score_prev)+"/"+string(score_high);
if exitState
{_str="exit?"}
draw_text(world_x(cx),world_y(cy),_str)
/*  
if state=stateGameover
{
  draw_text(world_x(cx),world_y(cy),score_prev)
}*/


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
