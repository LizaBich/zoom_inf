<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>ring</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

drawEvent=ringRotatableDraw

var gapSize=irandom_range(FIELD_INTERNAL_W/4,FIELD_INTERNAL_W/6);

ringMaskAdd(player.x+irandom(gapSize)+FIELD_INTERNAL_W/2,FIELD_INTERNAL_W-gapSize)

angStart=0
for(var i=0; i&lt;ringMaskCount() i+=1)
{mask_xstart[i]=0}
rotated=0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ringControllable()
{
  var dir=valueBound(m_a-mainField.rotation,360);
   
  if mouse_check_button_pressed(mb_left) 
  &amp;&amp; !centerButtonGetPress()
  {
    rotated=1
    for(var i=0; i&lt;ringMaskCount() i+=1)
    {mask_xstart[i]=ringMaskGet_x(i)}
    angStart=dir
  }
  if mouse_check_button(mb_left) &amp;&amp; rotated
  {
    var diff=angle_difference(dir,angStart)/360*FIELD_INTERNAL_W
     
    for(var i=0; i&lt;ringMaskCount() i+=1)
    {ringMaskSet_x(i,mask_xstart[i]+diff)} 
  }
  else
  {rotated=0}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
